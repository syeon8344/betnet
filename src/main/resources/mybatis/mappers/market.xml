<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- xml 주석 -->
<mapper namespace="web.model.dao.MarketDao" >  <!-- mapper start -->
    <!-- 5. 글 수정/삭제 권한 확인 -->
    <select id="mkCheck" parameterType="web.model.dto.MarketDto">
        select mkid from market where mkid = mkId and mkwriter = memberId;
    </select>

    <!-- 회원 접속 기록 -->
    <select id="accessLog" resultType="web.model.dto.LogDto">
        select * from access inner join members on access.memberid = members.memberid order by memberdatetime desc;
    </select>

    <!-- 배당금 지급 내역 -->
    <select id="dividend" resultType="web.model.dto.PointLogDto">
        select * from PointLogs inner join members on PointLogs.memberid = members.memberid where Description = 2 order by logdate desc;
    </select>

    <!-- 포인트 구매 내역 -->
    <select id="pointBuy" resultType="web.model.dto.PointLogDto">
        select * from PointLogs inner join members on PointLogs.memberid = members.memberid where Description = 1 order by logdate desc;
    </select>

    <!-- 포인트 출금 내역 -->
    <select id="pointWithdrawal" resultType="web.model.dto.PointLogDto">
        select * from PointLogs inner join members on PointLogs.memberid = members.memberid where Description = 4 order by logdate desc;
    </select>

    <!-- 게임 구매 내역 -->
    <select id="gameBuy" resultType="web.model.dto.GameDto">
        select * FROM GamePurchaseDetails
        INNER JOIN GamePurchaseList ON GamePurchaseDetails.listid = GamePurchaseList.listid
        INNER JOIN PointLogs ON GamePurchaseList.PointLogID = PointLogs.PointLogID
        ORDER BY PointLogs.LogDate DESC;
    </select>

    <!-- 제목으로 게시글 검색하기 -->
    <select id="searchByTitle" parameterType="String" resultType="web.model.dto.MarketDto">
        SELECT mkid, mktitle, mkwriter, mkview, mkdate, mkcontent, mkstate
        FROM market
        WHERE mktitle LIKE CONCAT('%', #{title}, '%')
    </select>
</mapper> <!-- mapper end -->

